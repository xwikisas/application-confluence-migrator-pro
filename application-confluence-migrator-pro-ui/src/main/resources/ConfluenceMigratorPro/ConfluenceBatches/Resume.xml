<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="ConfluenceMigratorPro.ConfluenceBatches.Resume" locale="">
  <web>ConfluenceMigratorPro.ConfluenceBatches</web>
  <name>Resume</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>Resume</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="ConfluenceMigratorPro.ConfluenceBatches.Code.CommonCode"/}}

{{include reference="ConfluenceMigratorPro.Code.CommonCode"/}}

{{velocity}}
#getBatches
#if ($batches.isEmpty())

  {{info}}
  There are no batches to run
  {{/info}}

#elseif ($request.name &amp;&amp; ($request.confirm == "1" || $request.dryrun == "1"))
  #set ($batchName = $request.name)
  #set ($batchDoc = $xwiki.getDocument("ConfluenceMigratorPro.ConfluenceBatches.Batches.$batchName"))
  #set ($migrations = [])
  #set ($discard = $migrations.addAll($batchDoc.getValue('lmMigrations')))
  #set ($discard = $migrations.addAll($batchDoc.getValue('migrations')))

  Resuming Batch [[$batchDoc]].

  #foreach ($migration in $migrations)
    #set ($migrationDoc = $xwiki.getDocument($migration))
    #set ($confluenceJob = $services.confluenceMigration.getLastJob($migrationDoc.getDocumentReference()))
    #if ("$migrationDoc.getValue('executed')" == '2' &amp;&amp; ("$!confluenceJob" == "" || $confluenceJob.status.state == 'NONE' || $confluenceJob.status.state == 'FINISHED'))
      #if ($request.confirm == "1")
        #batchRunMigration($migrationDoc)
      #else
        * Would resume [[$migrationDoc.getDocumentReference()]]
      #end
    #else
        * Not resuming [[$migrationDoc.getDocumentReference()]], which didn't die.
    #end
  #end
#end
#if (!$request.name || "$!request.confirm" != "1")


{{html}}
&lt;form method="post" action="" class="xform"&gt;
  &lt;dl&gt;
    &lt;dt&gt;
      &lt;label for="name"&gt;Name&lt;/label&gt;
      &lt;span class="xHint"&gt;
        Name of the batch to resume.
      &lt;/span&gt;
    &lt;/dt&gt;
    &lt;dd&gt;
      #displaySelectBatches('name')
    &lt;/dd&gt;
  &lt;/dl&gt;
  &lt;p&gt;
    &lt;button class="btn" name="dryrun" value="1"&gt;Dry Run&lt;/button&gt;
    &lt;button class="btn btn-primary" name="confirm" value="1"&gt;Resume the migrations&lt;/button&gt;
  &lt;/p&gt;
&lt;/form&gt;
{{/html}}


#end
{{/velocity}}
</content>
</xwikidoc>
